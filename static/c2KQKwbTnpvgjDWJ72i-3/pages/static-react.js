(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"7E2a":function(e,n,t){"use strict";t.r(n);var s=t("q1tI"),o=t.n(s),a=t("8Kt/"),i=t.n(a),r=t("MbLX"),l=t("IujW"),u=t.n(l),c=o.a.createElement,d=t("PJ27").default;n.default=function(){return c("div",null,c(i.a,null,c("title",null,"Static React")),c(r.a,null),c("div",{className:"text-outer"},c("div",{className:"text-inner"},c(u.a,{source:d,escapeHtml:!1}))))}},"9y4a":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/static-react",function(){return t("7E2a")}])},PJ27:function(e,n,t){"use strict";t.r(n),n.default='### How to run static React on Github.io with Next.js\n\n##### Dec 11, 2019\n\nLets build a blog using [Next.js](https://nextjs.org/) and host it on the free [Github pages](https://pages.github.com/).\n\nGithub pages are awesome because they are free and fast.\nNext.js is awesome because it easily gives us all the modern web development features like React, Babel, Webpack, hot-code reloading, and routing.\nYour site will be super fast and developing it will be very satifying. \n\n#### Setup Next.js\n\nSo, lets setup Next.js to generate a set of static assets that we can host on Github.\n\nSetup the boilerplate project:\n```\ncd your-blog-name\nnpm install react react-dom next\nmkdir pages\n```\n\nNow, lets map the Next.js scripts to npm comands, to avoid messing with node_module paths:\n\n```\n// package.json\n"scripts": {\n    "dev": "next",\n    "build": "next build",\n    "start": "next start"\n}\n```\n\nnow we can run a local next develompent server:\n\n```\nnpm run dev\n```\n\nCheck http://localhost:3000 now, you should see the auto-generated site. \nAny code changes will be hot loaded into your browser, making for a very satisfying dev time.\n    \n#### Enable Isomorphic React\n\nNext lets enable [serverless deployment](https://nextjs.org/docs#serverless-deployment). \nThis will tell Next.js to generate static files.\n\n\n```\n// next.config.js\nmodule.exports = {\n  target: \'serverless\'\n}\n```\n\nNow we can summon the compiling pixies:\n```\nnpm run build\n```\n\nTechnically, static output is available even without setting up serverless deployment. \nHowever this aproach is not very clean, since the output path changes on every compilation.\n\nIts better to go the right way and find the static build output under \n\n```\nls .next/server/static/\n```\n\n#### Deploy to Github\n\nWe can now deploy our site to github pages.\nCreate a new github repository, making sure the repo name matches the format "username.github.io".\n\nClone this repo locally.\n\n```\ncd\ngit clone git@github.com:username/username.github.io.git\n```\n\nCreate a symlink to the github page folder inside the next.js project.\n\n```\ncd your-blog-name\nln -s ../username.github.io prod\n```\n\nNow lets add a command to deploy our site:\n```\n// package.json\n"scripts": { \n    "dev": "next dev",\n    "build": "next build",\n    "start": "next start",\n    "deploy": "yes | cp -R .next/serverless/pages/* prod/" \n  },\n```\n\nNow we can deploy our site with\n\n```\nnpm run deploy\n```\n\nAfter wich we can go into the prod directory, do a final check, and git push our site to github pages.\n\n'}},[["9y4a",1,0]]]);